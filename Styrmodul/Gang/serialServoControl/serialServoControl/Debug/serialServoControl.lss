
serialServoControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000848  000008dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000848  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000206  00800100  00800100  000008dc  2**0
                  ALLOC
  3 .stab         000020c4  00000000  00000000  000008dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000848  00000000  00000000  000029a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000031e8  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000068  00000000  00000000  00003217  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000008a3  00000000  00000000  0000327f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000216  00000000  00000000  00003b22  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000524  00000000  00000000  00003d38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000174  00000000  00000000  0000425c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002a1  00000000  00000000  000043d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000788  00000000  00000000  00004671  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000058  00000000  00000000  00004df9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	c6 c1       	rjmp	.+908    	; 0x3fe <__vector_28>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	23 e0       	ldi	r18, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a6 30       	cpi	r26, 0x06	; 6
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	e6 d0       	rcall	.+460    	; 0x276 <main>
  aa:	cc c3       	rjmp	.+1944   	; 0x844 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <initServoSerial>:
	gServoParameters[2] = (uint8_t)(minPosition>>8); //high byte
	gServoParameters[3] = (uint8_t)maxPosition;
	gServoParameters[4] = (uint8_t)(maxPosition>>8);
	
	sendServoPacket(ID, INST_WRITE, 5);	
}
  ae:	10 92 cd 00 	sts	0x00CD, r1
  b2:	10 92 cc 00 	sts	0x00CC, r1
  b6:	88 e9       	ldi	r24, 0x98	; 152
  b8:	80 93 c9 00 	sts	0x00C9, r24
  bc:	86 e0       	ldi	r24, 0x06	; 6
  be:	80 93 ca 00 	sts	0x00CA, r24
  c2:	54 9a       	sbi	0x0a, 4	; 10
  c4:	08 95       	ret

000000c6 <servoCheckTxReady>:
  c6:	80 91 c8 00 	lds	r24, 0x00C8
  ca:	80 72       	andi	r24, 0x20	; 32
  cc:	08 95       	ret

000000ce <servolWriteByte>:
  ce:	cf 93       	push	r28
  d0:	c8 2f       	mov	r28, r24
  d2:	f9 df       	rcall	.-14     	; 0xc6 <servoCheckTxReady>
  d4:	88 23       	and	r24, r24
  d6:	e9 f3       	breq	.-6      	; 0xd2 <servolWriteByte+0x4>
  d8:	c0 93 ce 00 	sts	0x00CE, r28
  dc:	cf 91       	pop	r28
  de:	08 95       	ret

000000e0 <sendServoPacket>:
  e0:	0f 93       	push	r16
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	9f ef       	ldi	r25, 0xFF	; 255
  ea:	90 93 06 02 	sts	0x0206, r25
  ee:	90 93 07 02 	sts	0x0207, r25
  f2:	80 93 08 02 	sts	0x0208, r24
  f6:	84 2f       	mov	r24, r20
  f8:	8e 5f       	subi	r24, 0xFE	; 254
  fa:	80 93 09 02 	sts	0x0209, r24
  fe:	60 93 0a 02 	sts	0x020A, r22
 102:	44 23       	and	r20, r20
 104:	c1 f1       	breq	.+112    	; 0x176 <sendServoPacket+0x96>
 106:	e6 e8       	ldi	r30, 0x86	; 134
 108:	f2 e0       	ldi	r31, 0x02	; 2
 10a:	ab e0       	ldi	r26, 0x0B	; 11
 10c:	b2 e0       	ldi	r27, 0x02	; 2
 10e:	83 50       	subi	r24, 0x03	; 3
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	89 57       	subi	r24, 0x79	; 121
 114:	9d 4f       	sbci	r25, 0xFD	; 253
 116:	21 91       	ld	r18, Z+
 118:	2d 93       	st	X+, r18
 11a:	e8 17       	cp	r30, r24
 11c:	f9 07       	cpc	r31, r25
 11e:	d9 f7       	brne	.-10     	; 0x116 <sendServoPacket+0x36>
 120:	4a 5f       	subi	r20, 0xFA	; 250
 122:	24 2f       	mov	r18, r20
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	21 50       	subi	r18, 0x01	; 1
 128:	31 09       	sbc	r19, r1
 12a:	23 30       	cpi	r18, 0x03	; 3
 12c:	31 05       	cpc	r19, r1
 12e:	34 f5       	brge	.+76     	; 0x17c <sendServoPacket+0x9c>
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	60 e0       	ldi	r22, 0x00	; 0
 136:	0b c0       	rjmp	.+22     	; 0x14e <sendServoPacket+0x6e>
 138:	fc 01       	movw	r30, r24
 13a:	ea 5f       	subi	r30, 0xFA	; 250
 13c:	fd 4f       	sbci	r31, 0xFD	; 253
 13e:	80 81       	ld	r24, Z
 140:	68 0f       	add	r22, r24
 142:	5f 5f       	subi	r21, 0xFF	; 255
 144:	85 2f       	mov	r24, r21
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	82 17       	cp	r24, r18
 14a:	93 07       	cpc	r25, r19
 14c:	ac f3       	brlt	.-22     	; 0x138 <sendServoPacket+0x58>
 14e:	fc 01       	movw	r30, r24
 150:	ea 5f       	subi	r30, 0xFA	; 250
 152:	fd 4f       	sbci	r31, 0xFD	; 253
 154:	60 95       	com	r22
 156:	60 83       	st	Z, r22
 158:	44 23       	and	r20, r20
 15a:	a9 f0       	breq	.+42     	; 0x186 <sendServoPacket+0xa6>
 15c:	c6 e0       	ldi	r28, 0x06	; 6
 15e:	d2 e0       	ldi	r29, 0x02	; 2
 160:	41 50       	subi	r20, 0x01	; 1
 162:	04 2f       	mov	r16, r20
 164:	10 e0       	ldi	r17, 0x00	; 0
 166:	09 5f       	subi	r16, 0xF9	; 249
 168:	1d 4f       	sbci	r17, 0xFD	; 253
 16a:	89 91       	ld	r24, Y+
 16c:	b0 df       	rcall	.-160    	; 0xce <servolWriteByte>
 16e:	c0 17       	cp	r28, r16
 170:	d1 07       	cpc	r29, r17
 172:	d9 f7       	brne	.-10     	; 0x16a <sendServoPacket+0x8a>
 174:	08 c0       	rjmp	.+16     	; 0x186 <sendServoPacket+0xa6>
 176:	25 e0       	ldi	r18, 0x05	; 5
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	46 e0       	ldi	r20, 0x06	; 6
 17c:	82 e0       	ldi	r24, 0x02	; 2
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	52 e0       	ldi	r21, 0x02	; 2
 184:	d9 cf       	rjmp	.-78     	; 0x138 <sendServoPacket+0x58>
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	1f 91       	pop	r17
 18c:	0f 91       	pop	r16
 18e:	08 95       	ret

00000190 <servoGoto>:
 190:	9f 92       	push	r9
 192:	af 92       	push	r10
 194:	bf 92       	push	r11
 196:	cf 92       	push	r12
 198:	df 92       	push	r13
 19a:	ef 92       	push	r14
 19c:	ff 92       	push	r15
 19e:	0f 93       	push	r16
 1a0:	1f 93       	push	r17
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	c8 2f       	mov	r28, r24
 1a8:	cb 01       	movw	r24, r22
 1aa:	ba 01       	movw	r22, r20
 1ac:	12 2f       	mov	r17, r18
 1ae:	d3 2f       	mov	r29, r19
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	46 e1       	ldi	r20, 0x16	; 22
 1b6:	53 e4       	ldi	r21, 0x43	; 67
 1b8:	e2 d2       	rcall	.+1476   	; 0x77e <__mulsf3>
 1ba:	26 e5       	ldi	r18, 0x56	; 86
 1bc:	3e e0       	ldi	r19, 0x0E	; 14
 1be:	49 e4       	ldi	r20, 0x49	; 73
 1c0:	50 e4       	ldi	r21, 0x40	; 64
 1c2:	d0 d1       	rcall	.+928    	; 0x564 <__divsf3>
 1c4:	20 e0       	ldi	r18, 0x00	; 0
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	46 e1       	ldi	r20, 0x16	; 22
 1ca:	53 e4       	ldi	r21, 0x43	; 67
 1cc:	63 d1       	rcall	.+710    	; 0x494 <__addsf3>
 1ce:	96 2e       	mov	r9, r22
 1d0:	e7 2e       	mov	r14, r23
 1d2:	f8 2e       	mov	r15, r24
 1d4:	09 2f       	mov	r16, r25
 1d6:	a6 2e       	mov	r10, r22
 1d8:	b7 2e       	mov	r11, r23
 1da:	c8 2e       	mov	r12, r24
 1dc:	d9 2e       	mov	r13, r25
 1de:	20 e0       	ldi	r18, 0x00	; 0
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	46 e9       	ldi	r20, 0x96	; 150
 1e4:	53 e4       	ldi	r21, 0x43	; 67
 1e6:	c7 d2       	rcall	.+1422   	; 0x776 <__gesf2>
 1e8:	18 16       	cp	r1, r24
 1ea:	5c f0       	brlt	.+22     	; 0x202 <servoGoto+0x72>
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	a9 01       	movw	r20, r18
 1f2:	69 2d       	mov	r22, r9
 1f4:	7e 2d       	mov	r23, r14
 1f6:	8f 2d       	mov	r24, r15
 1f8:	90 2f       	mov	r25, r16
 1fa:	b0 d1       	rcall	.+864    	; 0x55c <__cmpsf2>
 1fc:	88 23       	and	r24, r24
 1fe:	84 f4       	brge	.+32     	; 0x220 <servoGoto+0x90>
 200:	0b c0       	rjmp	.+22     	; 0x218 <servoGoto+0x88>
 202:	a1 2c       	mov	r10, r1
 204:	b1 2c       	mov	r11, r1
 206:	0f 2e       	mov	r0, r31
 208:	f6 e9       	ldi	r31, 0x96	; 150
 20a:	cf 2e       	mov	r12, r31
 20c:	f0 2d       	mov	r31, r0
 20e:	0f 2e       	mov	r0, r31
 210:	f3 e4       	ldi	r31, 0x43	; 67
 212:	df 2e       	mov	r13, r31
 214:	f0 2d       	mov	r31, r0
 216:	04 c0       	rjmp	.+8      	; 0x220 <servoGoto+0x90>
 218:	a1 2c       	mov	r10, r1
 21a:	b1 2c       	mov	r11, r1
 21c:	c1 2c       	mov	r12, r1
 21e:	d1 2c       	mov	r13, r1
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 ec       	ldi	r19, 0xC0	; 192
 224:	4f e7       	ldi	r20, 0x7F	; 127
 226:	54 e4       	ldi	r21, 0x44	; 68
 228:	6a 2d       	mov	r22, r10
 22a:	7b 2d       	mov	r23, r11
 22c:	8c 2d       	mov	r24, r12
 22e:	9d 2d       	mov	r25, r13
 230:	a6 d2       	rcall	.+1356   	; 0x77e <__mulsf3>
 232:	20 e0       	ldi	r18, 0x00	; 0
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	46 e9       	ldi	r20, 0x96	; 150
 238:	53 e4       	ldi	r21, 0x43	; 67
 23a:	94 d1       	rcall	.+808    	; 0x564 <__divsf3>
 23c:	fb d1       	rcall	.+1014   	; 0x634 <__fixunssfsi>
 23e:	26 2f       	mov	r18, r22
 240:	9e e1       	ldi	r25, 0x1E	; 30
 242:	90 93 86 02 	sts	0x0286, r25
 246:	20 93 87 02 	sts	0x0287, r18
 24a:	70 93 88 02 	sts	0x0288, r23
 24e:	10 93 89 02 	sts	0x0289, r17
 252:	d0 93 8a 02 	sts	0x028A, r29
 256:	45 e0       	ldi	r20, 0x05	; 5
 258:	63 e0       	ldi	r22, 0x03	; 3
 25a:	8c 2f       	mov	r24, r28
 25c:	41 df       	rcall	.-382    	; 0xe0 <sendServoPacket>
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	1f 91       	pop	r17
 264:	0f 91       	pop	r16
 266:	ff 90       	pop	r15
 268:	ef 90       	pop	r14
 26a:	df 90       	pop	r13
 26c:	cf 90       	pop	r12
 26e:	bf 90       	pop	r11
 270:	af 90       	pop	r10
 272:	9f 90       	pop	r9
 274:	08 95       	ret

00000276 <main>:


int main(void)
{
	
	DDRD |= (1<<PORTD5);
 276:	55 9a       	sbi	0x0a, 5	; 10
	
	initServoSerial();
 278:	1a df       	rcall	.-460    	; 0xae <initServoSerial>
	
	servoTx;
 27a:	5c 98       	cbi	0x0b, 4	; 11
	
	
	//set servo angle
	gServoParameters[0] = 0x1E;
 27c:	8e e1       	ldi	r24, 0x1E	; 30
 27e:	80 93 86 02 	sts	0x0286, r24
	gServoParameters[1] = 0x00;
 282:	10 92 87 02 	sts	0x0287, r1
	gServoParameters[2] = 0x02;
 286:	82 e0       	ldi	r24, 0x02	; 2
 288:	80 93 88 02 	sts	0x0288, r24
	gServoParameters[3] = 0x00;
 28c:	10 92 89 02 	sts	0x0289, r1
	gServoParameters[4] = 0x02;
 290:	80 93 8a 02 	sts	0x028A, r24
			servoGoto(i, 0, 100);
			_delay_ms(2000);
		}*/

	
	sendServoPacket(BROADCASTING_ID, INST_WRITE, 3);
 294:	43 e0       	ldi	r20, 0x03	; 3
 296:	63 e0       	ldi	r22, 0x03	; 3
 298:	8e ef       	ldi	r24, 0xFE	; 254
 29a:	22 df       	rcall	.-444    	; 0xe0 <sendServoPacket>
	double beta = 3.1415/2.2;
	int speed = 180;
	
	//dummy code that puts robot in standard position
	
	servoGoto(1, 0, speed);
 29c:	24 eb       	ldi	r18, 0xB4	; 180
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	40 e0       	ldi	r20, 0x00	; 0
 2a2:	50 e0       	ldi	r21, 0x00	; 0
 2a4:	ba 01       	movw	r22, r20
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	73 df       	rcall	.-282    	; 0x190 <servoGoto>
	servoGoto(2, 0, speed);
 2aa:	24 eb       	ldi	r18, 0xB4	; 180
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	40 e0       	ldi	r20, 0x00	; 0
 2b0:	50 e0       	ldi	r21, 0x00	; 0
 2b2:	ba 01       	movw	r22, r20
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	6c df       	rcall	.-296    	; 0x190 <servoGoto>
	servoGoto(7, 0, speed);
 2b8:	24 eb       	ldi	r18, 0xB4	; 180
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	40 e0       	ldi	r20, 0x00	; 0
 2be:	50 e0       	ldi	r21, 0x00	; 0
 2c0:	ba 01       	movw	r22, r20
 2c2:	87 e0       	ldi	r24, 0x07	; 7
 2c4:	65 df       	rcall	.-310    	; 0x190 <servoGoto>
	servoGoto(8, 0, speed);
 2c6:	24 eb       	ldi	r18, 0xB4	; 180
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	40 e0       	ldi	r20, 0x00	; 0
 2cc:	50 e0       	ldi	r21, 0x00	; 0
 2ce:	ba 01       	movw	r22, r20
 2d0:	88 e0       	ldi	r24, 0x08	; 8
 2d2:	5e df       	rcall	.-324    	; 0x190 <servoGoto>
	servoGoto(13, 0, speed);
 2d4:	24 eb       	ldi	r18, 0xB4	; 180
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	50 e0       	ldi	r21, 0x00	; 0
 2dc:	ba 01       	movw	r22, r20
 2de:	8d e0       	ldi	r24, 0x0D	; 13
 2e0:	57 df       	rcall	.-338    	; 0x190 <servoGoto>
	servoGoto(14, 0, speed);
 2e2:	24 eb       	ldi	r18, 0xB4	; 180
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	40 e0       	ldi	r20, 0x00	; 0
 2e8:	50 e0       	ldi	r21, 0x00	; 0
 2ea:	ba 01       	movw	r22, r20
 2ec:	8e e0       	ldi	r24, 0x0E	; 14
 2ee:	50 df       	rcall	.-352    	; 0x190 <servoGoto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f0:	2f ef       	ldi	r18, 0xFF	; 255
 2f2:	81 ee       	ldi	r24, 0xE1	; 225
 2f4:	94 e0       	ldi	r25, 0x04	; 4
 2f6:	21 50       	subi	r18, 0x01	; 1
 2f8:	80 40       	sbci	r24, 0x00	; 0
 2fa:	90 40       	sbci	r25, 0x00	; 0
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0x80>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x8a>
 300:	00 00       	nop
	
	_delay_ms(100);
	
	servoGoto(15, -alpha, speed);
 302:	24 eb       	ldi	r18, 0xB4	; 180
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	46 e5       	ldi	r20, 0x56	; 86
 308:	5e e0       	ldi	r21, 0x0E	; 14
 30a:	69 e4       	ldi	r22, 0x49	; 73
 30c:	7f eb       	ldi	r23, 0xBF	; 191
 30e:	8f e0       	ldi	r24, 0x0F	; 15
 310:	3f df       	rcall	.-386    	; 0x190 <servoGoto>
	servoGoto(3, -alpha, speed);
 312:	24 eb       	ldi	r18, 0xB4	; 180
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	46 e5       	ldi	r20, 0x56	; 86
 318:	5e e0       	ldi	r21, 0x0E	; 14
 31a:	69 e4       	ldi	r22, 0x49	; 73
 31c:	7f eb       	ldi	r23, 0xBF	; 191
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	37 df       	rcall	.-402    	; 0x190 <servoGoto>
	servoGoto(9, -alpha, speed);
 322:	24 eb       	ldi	r18, 0xB4	; 180
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	46 e5       	ldi	r20, 0x56	; 86
 328:	5e e0       	ldi	r21, 0x0E	; 14
 32a:	69 e4       	ldi	r22, 0x49	; 73
 32c:	7f eb       	ldi	r23, 0xBF	; 191
 32e:	89 e0       	ldi	r24, 0x09	; 9
 330:	2f df       	rcall	.-418    	; 0x190 <servoGoto>
	servoGoto(16, alpha, speed);
 332:	24 eb       	ldi	r18, 0xB4	; 180
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	46 e5       	ldi	r20, 0x56	; 86
 338:	5e e0       	ldi	r21, 0x0E	; 14
 33a:	69 e4       	ldi	r22, 0x49	; 73
 33c:	7f e3       	ldi	r23, 0x3F	; 63
 33e:	80 e1       	ldi	r24, 0x10	; 16
 340:	27 df       	rcall	.-434    	; 0x190 <servoGoto>
	servoGoto(4, alpha, speed);
 342:	24 eb       	ldi	r18, 0xB4	; 180
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	46 e5       	ldi	r20, 0x56	; 86
 348:	5e e0       	ldi	r21, 0x0E	; 14
 34a:	69 e4       	ldi	r22, 0x49	; 73
 34c:	7f e3       	ldi	r23, 0x3F	; 63
 34e:	84 e0       	ldi	r24, 0x04	; 4
 350:	1f df       	rcall	.-450    	; 0x190 <servoGoto>
	servoGoto(10, alpha, speed);
 352:	24 eb       	ldi	r18, 0xB4	; 180
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	46 e5       	ldi	r20, 0x56	; 86
 358:	5e e0       	ldi	r21, 0x0E	; 14
 35a:	69 e4       	ldi	r22, 0x49	; 73
 35c:	7f e3       	ldi	r23, 0x3F	; 63
 35e:	8a e0       	ldi	r24, 0x0A	; 10
 360:	17 df       	rcall	.-466    	; 0x190 <servoGoto>
 362:	2f ef       	ldi	r18, 0xFF	; 255
 364:	81 ee       	ldi	r24, 0xE1	; 225
 366:	94 e0       	ldi	r25, 0x04	; 4
 368:	21 50       	subi	r18, 0x01	; 1
 36a:	80 40       	sbci	r24, 0x00	; 0
 36c:	90 40       	sbci	r25, 0x00	; 0
 36e:	e1 f7       	brne	.-8      	; 0x368 <main+0xf2>
 370:	00 c0       	rjmp	.+0      	; 0x372 <main+0xfc>
 372:	00 00       	nop
	
	_delay_ms(100);
	
	servoGoto(12, -beta, speed);
 374:	24 eb       	ldi	r18, 0xB4	; 180
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	47 e3       	ldi	r20, 0x37	; 55
 37a:	57 ec       	ldi	r21, 0xC7	; 199
 37c:	66 eb       	ldi	r22, 0xB6	; 182
 37e:	7f eb       	ldi	r23, 0xBF	; 191
 380:	8c e0       	ldi	r24, 0x0C	; 12
 382:	06 df       	rcall	.-500    	; 0x190 <servoGoto>
	servoGoto(18, -beta, speed);
 384:	24 eb       	ldi	r18, 0xB4	; 180
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	47 e3       	ldi	r20, 0x37	; 55
 38a:	57 ec       	ldi	r21, 0xC7	; 199
 38c:	66 eb       	ldi	r22, 0xB6	; 182
 38e:	7f eb       	ldi	r23, 0xBF	; 191
 390:	82 e1       	ldi	r24, 0x12	; 18
 392:	fe de       	rcall	.-516    	; 0x190 <servoGoto>
	servoGoto(6, -beta, speed);
 394:	24 eb       	ldi	r18, 0xB4	; 180
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	47 e3       	ldi	r20, 0x37	; 55
 39a:	57 ec       	ldi	r21, 0xC7	; 199
 39c:	66 eb       	ldi	r22, 0xB6	; 182
 39e:	7f eb       	ldi	r23, 0xBF	; 191
 3a0:	86 e0       	ldi	r24, 0x06	; 6
 3a2:	f6 de       	rcall	.-532    	; 0x190 <servoGoto>
	servoGoto(5, beta, speed);
 3a4:	24 eb       	ldi	r18, 0xB4	; 180
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	47 e3       	ldi	r20, 0x37	; 55
 3aa:	57 ec       	ldi	r21, 0xC7	; 199
 3ac:	66 eb       	ldi	r22, 0xB6	; 182
 3ae:	7f e3       	ldi	r23, 0x3F	; 63
 3b0:	85 e0       	ldi	r24, 0x05	; 5
 3b2:	ee de       	rcall	.-548    	; 0x190 <servoGoto>
	servoGoto(11, beta, speed);
 3b4:	24 eb       	ldi	r18, 0xB4	; 180
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	47 e3       	ldi	r20, 0x37	; 55
 3ba:	57 ec       	ldi	r21, 0xC7	; 199
 3bc:	66 eb       	ldi	r22, 0xB6	; 182
 3be:	7f e3       	ldi	r23, 0x3F	; 63
 3c0:	8b e0       	ldi	r24, 0x0B	; 11
 3c2:	e6 de       	rcall	.-564    	; 0x190 <servoGoto>
	servoGoto(17, beta, speed);
 3c4:	24 eb       	ldi	r18, 0xB4	; 180
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	47 e3       	ldi	r20, 0x37	; 55
 3ca:	57 ec       	ldi	r21, 0xC7	; 199
 3cc:	66 eb       	ldi	r22, 0xB6	; 182
 3ce:	7f e3       	ldi	r23, 0x3F	; 63
 3d0:	81 e1       	ldi	r24, 0x11	; 17
 3d2:	de de       	rcall	.-580    	; 0x190 <servoGoto>
 3d4:	2f ef       	ldi	r18, 0xFF	; 255
 3d6:	83 e2       	ldi	r24, 0x23	; 35
 3d8:	94 ef       	ldi	r25, 0xF4	; 244
 3da:	21 50       	subi	r18, 0x01	; 1
 3dc:	80 40       	sbci	r24, 0x00	; 0
 3de:	90 40       	sbci	r25, 0x00	; 0
 3e0:	e1 f7       	brne	.-8      	; 0x3da <main+0x164>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <main+0x16e>
 3e4:	00 00       	nop
 3e6:	2f ef       	ldi	r18, 0xFF	; 255
 3e8:	81 e1       	ldi	r24, 0x11	; 17
 3ea:	9a e7       	ldi	r25, 0x7A	; 122
 3ec:	21 50       	subi	r18, 0x01	; 1
 3ee:	80 40       	sbci	r24, 0x00	; 0
 3f0:	90 40       	sbci	r25, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x176>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x180>
 3f6:	00 00       	nop
		_delay_ms(1000);
	
	servoGoto(14, gamma, 50);
	servoGoto(16,alpha+0.2426,50);
	servoGoto(18, -beta+3.1415/4,50);*/
}
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	08 95       	ret

000003fe <__vector_28>:


// -- Interrupts --

ISR (USART1_RX_vect)
{
 3fe:	1f 92       	push	r1
 400:	0f 92       	push	r0
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	0f 92       	push	r0
 406:	11 24       	eor	r1, r1
 408:	8f 93       	push	r24
 40a:	9f 93       	push	r25
	uint8_t data;
	data = UDR1; // read data from buffer TODO: add check for overflow
 40c:	90 91 ce 00 	lds	r25, 0x00CE
	
	if(data == 0xff)
 410:	9f 3f       	cpi	r25, 0xFF	; 255
 412:	71 f4       	brne	.+28     	; 0x430 <__vector_28+0x32>
	{
		if(gServoRxReadMode == RM_WAIT_FOR_START)
 414:	80 91 01 01 	lds	r24, 0x0101
 418:	81 11       	cpse	r24, r1
 41a:	04 c0       	rjmp	.+8      	; 0x424 <__vector_28+0x26>
		{
			gServoRxReadMode = RM_CHECK_FOR_SECOND_START;
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	80 93 01 01 	sts	0x0101, r24
 422:	30 c0       	rjmp	.+96     	; 0x484 <__vector_28+0x86>
			
		}else if(gServoRxReadMode == RM_CHECK_FOR_SECOND_START)
 424:	81 30       	cpi	r24, 0x01	; 1
 426:	71 f5       	brne	.+92     	; 0x484 <__vector_28+0x86>
		{
			gServoRxReadMode = RM_READ_ID;
 428:	82 e0       	ldi	r24, 0x02	; 2
 42a:	80 93 01 01 	sts	0x0101, r24
 42e:	2a c0       	rjmp	.+84     	; 0x484 <__vector_28+0x86>
		}
		
	}else if(gServoRxReadMode == RM_READ_ID)
 430:	80 91 01 01 	lds	r24, 0x0101
 434:	82 30       	cpi	r24, 0x02	; 2
 436:	31 f4       	brne	.+12     	; 0x444 <__vector_28+0x46>
	{
		gServoRxBuffer[0] = data;
 438:	90 93 02 01 	sts	0x0102, r25
		gServoRxReadMode = RM_READ_LENGTH;
 43c:	83 e0       	ldi	r24, 0x03	; 3
 43e:	80 93 01 01 	sts	0x0101, r24
 442:	20 c0       	rjmp	.+64     	; 0x484 <__vector_28+0x86>
	}else if(gServoRxReadMode == RM_READ_LENGTH)
 444:	83 30       	cpi	r24, 0x03	; 3
 446:	41 f4       	brne	.+16     	; 0x458 <__vector_28+0x5a>
	{
		gServoRxBuffer[1] = data;
 448:	90 93 03 01 	sts	0x0103, r25
		// TODO: add check for correct length maybe?
		gServoLengthCounter = data;
 44c:	90 93 00 01 	sts	0x0100, r25
		gServoRxReadMode = RM_READ_ERROR;	
 450:	84 e0       	ldi	r24, 0x04	; 4
 452:	80 93 01 01 	sts	0x0101, r24
 456:	16 c0       	rjmp	.+44     	; 0x484 <__vector_28+0x86>
	}else if(gServoRxReadMode == RM_READ_ERROR)
 458:	84 30       	cpi	r24, 0x04	; 4
 45a:	59 f4       	brne	.+22     	; 0x472 <__vector_28+0x74>
	{
		gServoRxBuffer[2] = data;
 45c:	90 93 04 01 	sts	0x0104, r25
		gServoRxReadMode = RM_READ_PARAMETERS;
 460:	86 e0       	ldi	r24, 0x06	; 6
 462:	80 93 01 01 	sts	0x0101, r24
		--gServoLengthCounter;
 466:	80 91 00 01 	lds	r24, 0x0100
 46a:	81 50       	subi	r24, 0x01	; 1
 46c:	80 93 00 01 	sts	0x0100, r24
 470:	09 c0       	rjmp	.+18     	; 0x484 <__vector_28+0x86>
	}else if(gServoRxReadMode == RM_READ_PARAMETERS)
 472:	86 30       	cpi	r24, 0x06	; 6
 474:	39 f4       	brne	.+14     	; 0x484 <__vector_28+0x86>
	{
		if(gServoLengthCounter == 2)  
 476:	80 91 00 01 	lds	r24, 0x0100
 47a:	82 30       	cpi	r24, 0x02	; 2
 47c:	19 f4       	brne	.+6      	; 0x484 <__vector_28+0x86>
		{
			gServoRxReadMode = RM_READ_CHECKSUM;
 47e:	87 e0       	ldi	r24, 0x07	; 7
 480:	80 93 01 01 	sts	0x0101, r24
		}
	// TODO: figure out how to get the index for gbuffer correct...
	}
}
 484:	9f 91       	pop	r25
 486:	8f 91       	pop	r24
 488:	0f 90       	pop	r0
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	0f 90       	pop	r0
 48e:	1f 90       	pop	r1
 490:	18 95       	reti

00000492 <__subsf3>:
 492:	50 58       	subi	r21, 0x80	; 128

00000494 <__addsf3>:
 494:	bb 27       	eor	r27, r27
 496:	aa 27       	eor	r26, r26
 498:	0e d0       	rcall	.+28     	; 0x4b6 <__addsf3x>
 49a:	33 c1       	rjmp	.+614    	; 0x702 <__fp_round>
 49c:	24 d1       	rcall	.+584    	; 0x6e6 <__fp_pscA>
 49e:	30 f0       	brcs	.+12     	; 0x4ac <__addsf3+0x18>
 4a0:	29 d1       	rcall	.+594    	; 0x6f4 <__fp_pscB>
 4a2:	20 f0       	brcs	.+8      	; 0x4ac <__addsf3+0x18>
 4a4:	31 f4       	brne	.+12     	; 0x4b2 <__addsf3+0x1e>
 4a6:	9f 3f       	cpi	r25, 0xFF	; 255
 4a8:	11 f4       	brne	.+4      	; 0x4ae <__addsf3+0x1a>
 4aa:	1e f4       	brtc	.+6      	; 0x4b2 <__addsf3+0x1e>
 4ac:	19 c1       	rjmp	.+562    	; 0x6e0 <__fp_nan>
 4ae:	0e f4       	brtc	.+2      	; 0x4b2 <__addsf3+0x1e>
 4b0:	e0 95       	com	r30
 4b2:	e7 fb       	bst	r30, 7
 4b4:	0f c1       	rjmp	.+542    	; 0x6d4 <__fp_inf>

000004b6 <__addsf3x>:
 4b6:	e9 2f       	mov	r30, r25
 4b8:	35 d1       	rcall	.+618    	; 0x724 <__fp_split3>
 4ba:	80 f3       	brcs	.-32     	; 0x49c <__addsf3+0x8>
 4bc:	ba 17       	cp	r27, r26
 4be:	62 07       	cpc	r22, r18
 4c0:	73 07       	cpc	r23, r19
 4c2:	84 07       	cpc	r24, r20
 4c4:	95 07       	cpc	r25, r21
 4c6:	18 f0       	brcs	.+6      	; 0x4ce <__addsf3x+0x18>
 4c8:	71 f4       	brne	.+28     	; 0x4e6 <__addsf3x+0x30>
 4ca:	9e f5       	brtc	.+102    	; 0x532 <__addsf3x+0x7c>
 4cc:	4d c1       	rjmp	.+666    	; 0x768 <__fp_zero>
 4ce:	0e f4       	brtc	.+2      	; 0x4d2 <__addsf3x+0x1c>
 4d0:	e0 95       	com	r30
 4d2:	0b 2e       	mov	r0, r27
 4d4:	ba 2f       	mov	r27, r26
 4d6:	a0 2d       	mov	r26, r0
 4d8:	0b 01       	movw	r0, r22
 4da:	b9 01       	movw	r22, r18
 4dc:	90 01       	movw	r18, r0
 4de:	0c 01       	movw	r0, r24
 4e0:	ca 01       	movw	r24, r20
 4e2:	a0 01       	movw	r20, r0
 4e4:	11 24       	eor	r1, r1
 4e6:	ff 27       	eor	r31, r31
 4e8:	59 1b       	sub	r21, r25
 4ea:	99 f0       	breq	.+38     	; 0x512 <__addsf3x+0x5c>
 4ec:	59 3f       	cpi	r21, 0xF9	; 249
 4ee:	50 f4       	brcc	.+20     	; 0x504 <__addsf3x+0x4e>
 4f0:	50 3e       	cpi	r21, 0xE0	; 224
 4f2:	68 f1       	brcs	.+90     	; 0x54e <__addsf3x+0x98>
 4f4:	1a 16       	cp	r1, r26
 4f6:	f0 40       	sbci	r31, 0x00	; 0
 4f8:	a2 2f       	mov	r26, r18
 4fa:	23 2f       	mov	r18, r19
 4fc:	34 2f       	mov	r19, r20
 4fe:	44 27       	eor	r20, r20
 500:	58 5f       	subi	r21, 0xF8	; 248
 502:	f3 cf       	rjmp	.-26     	; 0x4ea <__addsf3x+0x34>
 504:	46 95       	lsr	r20
 506:	37 95       	ror	r19
 508:	27 95       	ror	r18
 50a:	a7 95       	ror	r26
 50c:	f0 40       	sbci	r31, 0x00	; 0
 50e:	53 95       	inc	r21
 510:	c9 f7       	brne	.-14     	; 0x504 <__addsf3x+0x4e>
 512:	7e f4       	brtc	.+30     	; 0x532 <__addsf3x+0x7c>
 514:	1f 16       	cp	r1, r31
 516:	ba 0b       	sbc	r27, r26
 518:	62 0b       	sbc	r22, r18
 51a:	73 0b       	sbc	r23, r19
 51c:	84 0b       	sbc	r24, r20
 51e:	ba f0       	brmi	.+46     	; 0x54e <__addsf3x+0x98>
 520:	91 50       	subi	r25, 0x01	; 1
 522:	a1 f0       	breq	.+40     	; 0x54c <__addsf3x+0x96>
 524:	ff 0f       	add	r31, r31
 526:	bb 1f       	adc	r27, r27
 528:	66 1f       	adc	r22, r22
 52a:	77 1f       	adc	r23, r23
 52c:	88 1f       	adc	r24, r24
 52e:	c2 f7       	brpl	.-16     	; 0x520 <__addsf3x+0x6a>
 530:	0e c0       	rjmp	.+28     	; 0x54e <__addsf3x+0x98>
 532:	ba 0f       	add	r27, r26
 534:	62 1f       	adc	r22, r18
 536:	73 1f       	adc	r23, r19
 538:	84 1f       	adc	r24, r20
 53a:	48 f4       	brcc	.+18     	; 0x54e <__addsf3x+0x98>
 53c:	87 95       	ror	r24
 53e:	77 95       	ror	r23
 540:	67 95       	ror	r22
 542:	b7 95       	ror	r27
 544:	f7 95       	ror	r31
 546:	9e 3f       	cpi	r25, 0xFE	; 254
 548:	08 f0       	brcs	.+2      	; 0x54c <__addsf3x+0x96>
 54a:	b3 cf       	rjmp	.-154    	; 0x4b2 <__addsf3+0x1e>
 54c:	93 95       	inc	r25
 54e:	88 0f       	add	r24, r24
 550:	08 f0       	brcs	.+2      	; 0x554 <__addsf3x+0x9e>
 552:	99 27       	eor	r25, r25
 554:	ee 0f       	add	r30, r30
 556:	97 95       	ror	r25
 558:	87 95       	ror	r24
 55a:	08 95       	ret

0000055c <__cmpsf2>:
 55c:	97 d0       	rcall	.+302    	; 0x68c <__fp_cmp>
 55e:	08 f4       	brcc	.+2      	; 0x562 <__cmpsf2+0x6>
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	08 95       	ret

00000564 <__divsf3>:
 564:	0c d0       	rcall	.+24     	; 0x57e <__divsf3x>
 566:	cd c0       	rjmp	.+410    	; 0x702 <__fp_round>
 568:	c5 d0       	rcall	.+394    	; 0x6f4 <__fp_pscB>
 56a:	40 f0       	brcs	.+16     	; 0x57c <__divsf3+0x18>
 56c:	bc d0       	rcall	.+376    	; 0x6e6 <__fp_pscA>
 56e:	30 f0       	brcs	.+12     	; 0x57c <__divsf3+0x18>
 570:	21 f4       	brne	.+8      	; 0x57a <__divsf3+0x16>
 572:	5f 3f       	cpi	r21, 0xFF	; 255
 574:	19 f0       	breq	.+6      	; 0x57c <__divsf3+0x18>
 576:	ae c0       	rjmp	.+348    	; 0x6d4 <__fp_inf>
 578:	51 11       	cpse	r21, r1
 57a:	f7 c0       	rjmp	.+494    	; 0x76a <__fp_szero>
 57c:	b1 c0       	rjmp	.+354    	; 0x6e0 <__fp_nan>

0000057e <__divsf3x>:
 57e:	d2 d0       	rcall	.+420    	; 0x724 <__fp_split3>
 580:	98 f3       	brcs	.-26     	; 0x568 <__divsf3+0x4>

00000582 <__divsf3_pse>:
 582:	99 23       	and	r25, r25
 584:	c9 f3       	breq	.-14     	; 0x578 <__divsf3+0x14>
 586:	55 23       	and	r21, r21
 588:	b1 f3       	breq	.-20     	; 0x576 <__divsf3+0x12>
 58a:	95 1b       	sub	r25, r21
 58c:	55 0b       	sbc	r21, r21
 58e:	bb 27       	eor	r27, r27
 590:	aa 27       	eor	r26, r26
 592:	62 17       	cp	r22, r18
 594:	73 07       	cpc	r23, r19
 596:	84 07       	cpc	r24, r20
 598:	38 f0       	brcs	.+14     	; 0x5a8 <__divsf3_pse+0x26>
 59a:	9f 5f       	subi	r25, 0xFF	; 255
 59c:	5f 4f       	sbci	r21, 0xFF	; 255
 59e:	22 0f       	add	r18, r18
 5a0:	33 1f       	adc	r19, r19
 5a2:	44 1f       	adc	r20, r20
 5a4:	aa 1f       	adc	r26, r26
 5a6:	a9 f3       	breq	.-22     	; 0x592 <__divsf3_pse+0x10>
 5a8:	33 d0       	rcall	.+102    	; 0x610 <__divsf3_pse+0x8e>
 5aa:	0e 2e       	mov	r0, r30
 5ac:	3a f0       	brmi	.+14     	; 0x5bc <__divsf3_pse+0x3a>
 5ae:	e0 e8       	ldi	r30, 0x80	; 128
 5b0:	30 d0       	rcall	.+96     	; 0x612 <__divsf3_pse+0x90>
 5b2:	91 50       	subi	r25, 0x01	; 1
 5b4:	50 40       	sbci	r21, 0x00	; 0
 5b6:	e6 95       	lsr	r30
 5b8:	00 1c       	adc	r0, r0
 5ba:	ca f7       	brpl	.-14     	; 0x5ae <__divsf3_pse+0x2c>
 5bc:	29 d0       	rcall	.+82     	; 0x610 <__divsf3_pse+0x8e>
 5be:	fe 2f       	mov	r31, r30
 5c0:	27 d0       	rcall	.+78     	; 0x610 <__divsf3_pse+0x8e>
 5c2:	66 0f       	add	r22, r22
 5c4:	77 1f       	adc	r23, r23
 5c6:	88 1f       	adc	r24, r24
 5c8:	bb 1f       	adc	r27, r27
 5ca:	26 17       	cp	r18, r22
 5cc:	37 07       	cpc	r19, r23
 5ce:	48 07       	cpc	r20, r24
 5d0:	ab 07       	cpc	r26, r27
 5d2:	b0 e8       	ldi	r27, 0x80	; 128
 5d4:	09 f0       	breq	.+2      	; 0x5d8 <__divsf3_pse+0x56>
 5d6:	bb 0b       	sbc	r27, r27
 5d8:	80 2d       	mov	r24, r0
 5da:	bf 01       	movw	r22, r30
 5dc:	ff 27       	eor	r31, r31
 5de:	93 58       	subi	r25, 0x83	; 131
 5e0:	5f 4f       	sbci	r21, 0xFF	; 255
 5e2:	2a f0       	brmi	.+10     	; 0x5ee <__divsf3_pse+0x6c>
 5e4:	9e 3f       	cpi	r25, 0xFE	; 254
 5e6:	51 05       	cpc	r21, r1
 5e8:	68 f0       	brcs	.+26     	; 0x604 <__divsf3_pse+0x82>
 5ea:	74 c0       	rjmp	.+232    	; 0x6d4 <__fp_inf>
 5ec:	be c0       	rjmp	.+380    	; 0x76a <__fp_szero>
 5ee:	5f 3f       	cpi	r21, 0xFF	; 255
 5f0:	ec f3       	brlt	.-6      	; 0x5ec <__divsf3_pse+0x6a>
 5f2:	98 3e       	cpi	r25, 0xE8	; 232
 5f4:	dc f3       	brlt	.-10     	; 0x5ec <__divsf3_pse+0x6a>
 5f6:	86 95       	lsr	r24
 5f8:	77 95       	ror	r23
 5fa:	67 95       	ror	r22
 5fc:	b7 95       	ror	r27
 5fe:	f7 95       	ror	r31
 600:	9f 5f       	subi	r25, 0xFF	; 255
 602:	c9 f7       	brne	.-14     	; 0x5f6 <__divsf3_pse+0x74>
 604:	88 0f       	add	r24, r24
 606:	91 1d       	adc	r25, r1
 608:	96 95       	lsr	r25
 60a:	87 95       	ror	r24
 60c:	97 f9       	bld	r25, 7
 60e:	08 95       	ret
 610:	e1 e0       	ldi	r30, 0x01	; 1
 612:	66 0f       	add	r22, r22
 614:	77 1f       	adc	r23, r23
 616:	88 1f       	adc	r24, r24
 618:	bb 1f       	adc	r27, r27
 61a:	62 17       	cp	r22, r18
 61c:	73 07       	cpc	r23, r19
 61e:	84 07       	cpc	r24, r20
 620:	ba 07       	cpc	r27, r26
 622:	20 f0       	brcs	.+8      	; 0x62c <__divsf3_pse+0xaa>
 624:	62 1b       	sub	r22, r18
 626:	73 0b       	sbc	r23, r19
 628:	84 0b       	sbc	r24, r20
 62a:	ba 0b       	sbc	r27, r26
 62c:	ee 1f       	adc	r30, r30
 62e:	88 f7       	brcc	.-30     	; 0x612 <__divsf3_pse+0x90>
 630:	e0 95       	com	r30
 632:	08 95       	ret

00000634 <__fixunssfsi>:
 634:	7f d0       	rcall	.+254    	; 0x734 <__fp_splitA>
 636:	88 f0       	brcs	.+34     	; 0x65a <__fixunssfsi+0x26>
 638:	9f 57       	subi	r25, 0x7F	; 127
 63a:	90 f0       	brcs	.+36     	; 0x660 <__fixunssfsi+0x2c>
 63c:	b9 2f       	mov	r27, r25
 63e:	99 27       	eor	r25, r25
 640:	b7 51       	subi	r27, 0x17	; 23
 642:	a0 f0       	brcs	.+40     	; 0x66c <__fixunssfsi+0x38>
 644:	d1 f0       	breq	.+52     	; 0x67a <__fixunssfsi+0x46>
 646:	66 0f       	add	r22, r22
 648:	77 1f       	adc	r23, r23
 64a:	88 1f       	adc	r24, r24
 64c:	99 1f       	adc	r25, r25
 64e:	1a f0       	brmi	.+6      	; 0x656 <__fixunssfsi+0x22>
 650:	ba 95       	dec	r27
 652:	c9 f7       	brne	.-14     	; 0x646 <__fixunssfsi+0x12>
 654:	12 c0       	rjmp	.+36     	; 0x67a <__fixunssfsi+0x46>
 656:	b1 30       	cpi	r27, 0x01	; 1
 658:	81 f0       	breq	.+32     	; 0x67a <__fixunssfsi+0x46>
 65a:	86 d0       	rcall	.+268    	; 0x768 <__fp_zero>
 65c:	b1 e0       	ldi	r27, 0x01	; 1
 65e:	08 95       	ret
 660:	83 c0       	rjmp	.+262    	; 0x768 <__fp_zero>
 662:	67 2f       	mov	r22, r23
 664:	78 2f       	mov	r23, r24
 666:	88 27       	eor	r24, r24
 668:	b8 5f       	subi	r27, 0xF8	; 248
 66a:	39 f0       	breq	.+14     	; 0x67a <__fixunssfsi+0x46>
 66c:	b9 3f       	cpi	r27, 0xF9	; 249
 66e:	cc f3       	brlt	.-14     	; 0x662 <__fixunssfsi+0x2e>
 670:	86 95       	lsr	r24
 672:	77 95       	ror	r23
 674:	67 95       	ror	r22
 676:	b3 95       	inc	r27
 678:	d9 f7       	brne	.-10     	; 0x670 <__fixunssfsi+0x3c>
 67a:	3e f4       	brtc	.+14     	; 0x68a <__fixunssfsi+0x56>
 67c:	90 95       	com	r25
 67e:	80 95       	com	r24
 680:	70 95       	com	r23
 682:	61 95       	neg	r22
 684:	7f 4f       	sbci	r23, 0xFF	; 255
 686:	8f 4f       	sbci	r24, 0xFF	; 255
 688:	9f 4f       	sbci	r25, 0xFF	; 255
 68a:	08 95       	ret

0000068c <__fp_cmp>:
 68c:	99 0f       	add	r25, r25
 68e:	00 08       	sbc	r0, r0
 690:	55 0f       	add	r21, r21
 692:	aa 0b       	sbc	r26, r26
 694:	e0 e8       	ldi	r30, 0x80	; 128
 696:	fe ef       	ldi	r31, 0xFE	; 254
 698:	16 16       	cp	r1, r22
 69a:	17 06       	cpc	r1, r23
 69c:	e8 07       	cpc	r30, r24
 69e:	f9 07       	cpc	r31, r25
 6a0:	c0 f0       	brcs	.+48     	; 0x6d2 <__fp_cmp+0x46>
 6a2:	12 16       	cp	r1, r18
 6a4:	13 06       	cpc	r1, r19
 6a6:	e4 07       	cpc	r30, r20
 6a8:	f5 07       	cpc	r31, r21
 6aa:	98 f0       	brcs	.+38     	; 0x6d2 <__fp_cmp+0x46>
 6ac:	62 1b       	sub	r22, r18
 6ae:	73 0b       	sbc	r23, r19
 6b0:	84 0b       	sbc	r24, r20
 6b2:	95 0b       	sbc	r25, r21
 6b4:	39 f4       	brne	.+14     	; 0x6c4 <__fp_cmp+0x38>
 6b6:	0a 26       	eor	r0, r26
 6b8:	61 f0       	breq	.+24     	; 0x6d2 <__fp_cmp+0x46>
 6ba:	23 2b       	or	r18, r19
 6bc:	24 2b       	or	r18, r20
 6be:	25 2b       	or	r18, r21
 6c0:	21 f4       	brne	.+8      	; 0x6ca <__fp_cmp+0x3e>
 6c2:	08 95       	ret
 6c4:	0a 26       	eor	r0, r26
 6c6:	09 f4       	brne	.+2      	; 0x6ca <__fp_cmp+0x3e>
 6c8:	a1 40       	sbci	r26, 0x01	; 1
 6ca:	a6 95       	lsr	r26
 6cc:	8f ef       	ldi	r24, 0xFF	; 255
 6ce:	81 1d       	adc	r24, r1
 6d0:	81 1d       	adc	r24, r1
 6d2:	08 95       	ret

000006d4 <__fp_inf>:
 6d4:	97 f9       	bld	r25, 7
 6d6:	9f 67       	ori	r25, 0x7F	; 127
 6d8:	80 e8       	ldi	r24, 0x80	; 128
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	60 e0       	ldi	r22, 0x00	; 0
 6de:	08 95       	ret

000006e0 <__fp_nan>:
 6e0:	9f ef       	ldi	r25, 0xFF	; 255
 6e2:	80 ec       	ldi	r24, 0xC0	; 192
 6e4:	08 95       	ret

000006e6 <__fp_pscA>:
 6e6:	00 24       	eor	r0, r0
 6e8:	0a 94       	dec	r0
 6ea:	16 16       	cp	r1, r22
 6ec:	17 06       	cpc	r1, r23
 6ee:	18 06       	cpc	r1, r24
 6f0:	09 06       	cpc	r0, r25
 6f2:	08 95       	ret

000006f4 <__fp_pscB>:
 6f4:	00 24       	eor	r0, r0
 6f6:	0a 94       	dec	r0
 6f8:	12 16       	cp	r1, r18
 6fa:	13 06       	cpc	r1, r19
 6fc:	14 06       	cpc	r1, r20
 6fe:	05 06       	cpc	r0, r21
 700:	08 95       	ret

00000702 <__fp_round>:
 702:	09 2e       	mov	r0, r25
 704:	03 94       	inc	r0
 706:	00 0c       	add	r0, r0
 708:	11 f4       	brne	.+4      	; 0x70e <__fp_round+0xc>
 70a:	88 23       	and	r24, r24
 70c:	52 f0       	brmi	.+20     	; 0x722 <__fp_round+0x20>
 70e:	bb 0f       	add	r27, r27
 710:	40 f4       	brcc	.+16     	; 0x722 <__fp_round+0x20>
 712:	bf 2b       	or	r27, r31
 714:	11 f4       	brne	.+4      	; 0x71a <__fp_round+0x18>
 716:	60 ff       	sbrs	r22, 0
 718:	04 c0       	rjmp	.+8      	; 0x722 <__fp_round+0x20>
 71a:	6f 5f       	subi	r22, 0xFF	; 255
 71c:	7f 4f       	sbci	r23, 0xFF	; 255
 71e:	8f 4f       	sbci	r24, 0xFF	; 255
 720:	9f 4f       	sbci	r25, 0xFF	; 255
 722:	08 95       	ret

00000724 <__fp_split3>:
 724:	57 fd       	sbrc	r21, 7
 726:	90 58       	subi	r25, 0x80	; 128
 728:	44 0f       	add	r20, r20
 72a:	55 1f       	adc	r21, r21
 72c:	59 f0       	breq	.+22     	; 0x744 <__fp_splitA+0x10>
 72e:	5f 3f       	cpi	r21, 0xFF	; 255
 730:	71 f0       	breq	.+28     	; 0x74e <__fp_splitA+0x1a>
 732:	47 95       	ror	r20

00000734 <__fp_splitA>:
 734:	88 0f       	add	r24, r24
 736:	97 fb       	bst	r25, 7
 738:	99 1f       	adc	r25, r25
 73a:	61 f0       	breq	.+24     	; 0x754 <__fp_splitA+0x20>
 73c:	9f 3f       	cpi	r25, 0xFF	; 255
 73e:	79 f0       	breq	.+30     	; 0x75e <__fp_splitA+0x2a>
 740:	87 95       	ror	r24
 742:	08 95       	ret
 744:	12 16       	cp	r1, r18
 746:	13 06       	cpc	r1, r19
 748:	14 06       	cpc	r1, r20
 74a:	55 1f       	adc	r21, r21
 74c:	f2 cf       	rjmp	.-28     	; 0x732 <__fp_split3+0xe>
 74e:	46 95       	lsr	r20
 750:	f1 df       	rcall	.-30     	; 0x734 <__fp_splitA>
 752:	08 c0       	rjmp	.+16     	; 0x764 <__fp_splitA+0x30>
 754:	16 16       	cp	r1, r22
 756:	17 06       	cpc	r1, r23
 758:	18 06       	cpc	r1, r24
 75a:	99 1f       	adc	r25, r25
 75c:	f1 cf       	rjmp	.-30     	; 0x740 <__fp_splitA+0xc>
 75e:	86 95       	lsr	r24
 760:	71 05       	cpc	r23, r1
 762:	61 05       	cpc	r22, r1
 764:	08 94       	sec
 766:	08 95       	ret

00000768 <__fp_zero>:
 768:	e8 94       	clt

0000076a <__fp_szero>:
 76a:	bb 27       	eor	r27, r27
 76c:	66 27       	eor	r22, r22
 76e:	77 27       	eor	r23, r23
 770:	cb 01       	movw	r24, r22
 772:	97 f9       	bld	r25, 7
 774:	08 95       	ret

00000776 <__gesf2>:
 776:	8a df       	rcall	.-236    	; 0x68c <__fp_cmp>
 778:	08 f4       	brcc	.+2      	; 0x77c <__gesf2+0x6>
 77a:	8f ef       	ldi	r24, 0xFF	; 255
 77c:	08 95       	ret

0000077e <__mulsf3>:
 77e:	0b d0       	rcall	.+22     	; 0x796 <__mulsf3x>
 780:	c0 cf       	rjmp	.-128    	; 0x702 <__fp_round>
 782:	b1 df       	rcall	.-158    	; 0x6e6 <__fp_pscA>
 784:	28 f0       	brcs	.+10     	; 0x790 <__mulsf3+0x12>
 786:	b6 df       	rcall	.-148    	; 0x6f4 <__fp_pscB>
 788:	18 f0       	brcs	.+6      	; 0x790 <__mulsf3+0x12>
 78a:	95 23       	and	r25, r21
 78c:	09 f0       	breq	.+2      	; 0x790 <__mulsf3+0x12>
 78e:	a2 cf       	rjmp	.-188    	; 0x6d4 <__fp_inf>
 790:	a7 cf       	rjmp	.-178    	; 0x6e0 <__fp_nan>
 792:	11 24       	eor	r1, r1
 794:	ea cf       	rjmp	.-44     	; 0x76a <__fp_szero>

00000796 <__mulsf3x>:
 796:	c6 df       	rcall	.-116    	; 0x724 <__fp_split3>
 798:	a0 f3       	brcs	.-24     	; 0x782 <__mulsf3+0x4>

0000079a <__mulsf3_pse>:
 79a:	95 9f       	mul	r25, r21
 79c:	d1 f3       	breq	.-12     	; 0x792 <__mulsf3+0x14>
 79e:	95 0f       	add	r25, r21
 7a0:	50 e0       	ldi	r21, 0x00	; 0
 7a2:	55 1f       	adc	r21, r21
 7a4:	62 9f       	mul	r22, r18
 7a6:	f0 01       	movw	r30, r0
 7a8:	72 9f       	mul	r23, r18
 7aa:	bb 27       	eor	r27, r27
 7ac:	f0 0d       	add	r31, r0
 7ae:	b1 1d       	adc	r27, r1
 7b0:	63 9f       	mul	r22, r19
 7b2:	aa 27       	eor	r26, r26
 7b4:	f0 0d       	add	r31, r0
 7b6:	b1 1d       	adc	r27, r1
 7b8:	aa 1f       	adc	r26, r26
 7ba:	64 9f       	mul	r22, r20
 7bc:	66 27       	eor	r22, r22
 7be:	b0 0d       	add	r27, r0
 7c0:	a1 1d       	adc	r26, r1
 7c2:	66 1f       	adc	r22, r22
 7c4:	82 9f       	mul	r24, r18
 7c6:	22 27       	eor	r18, r18
 7c8:	b0 0d       	add	r27, r0
 7ca:	a1 1d       	adc	r26, r1
 7cc:	62 1f       	adc	r22, r18
 7ce:	73 9f       	mul	r23, r19
 7d0:	b0 0d       	add	r27, r0
 7d2:	a1 1d       	adc	r26, r1
 7d4:	62 1f       	adc	r22, r18
 7d6:	83 9f       	mul	r24, r19
 7d8:	a0 0d       	add	r26, r0
 7da:	61 1d       	adc	r22, r1
 7dc:	22 1f       	adc	r18, r18
 7de:	74 9f       	mul	r23, r20
 7e0:	33 27       	eor	r19, r19
 7e2:	a0 0d       	add	r26, r0
 7e4:	61 1d       	adc	r22, r1
 7e6:	23 1f       	adc	r18, r19
 7e8:	84 9f       	mul	r24, r20
 7ea:	60 0d       	add	r22, r0
 7ec:	21 1d       	adc	r18, r1
 7ee:	82 2f       	mov	r24, r18
 7f0:	76 2f       	mov	r23, r22
 7f2:	6a 2f       	mov	r22, r26
 7f4:	11 24       	eor	r1, r1
 7f6:	9f 57       	subi	r25, 0x7F	; 127
 7f8:	50 40       	sbci	r21, 0x00	; 0
 7fa:	8a f0       	brmi	.+34     	; 0x81e <__mulsf3_pse+0x84>
 7fc:	e1 f0       	breq	.+56     	; 0x836 <__mulsf3_pse+0x9c>
 7fe:	88 23       	and	r24, r24
 800:	4a f0       	brmi	.+18     	; 0x814 <__mulsf3_pse+0x7a>
 802:	ee 0f       	add	r30, r30
 804:	ff 1f       	adc	r31, r31
 806:	bb 1f       	adc	r27, r27
 808:	66 1f       	adc	r22, r22
 80a:	77 1f       	adc	r23, r23
 80c:	88 1f       	adc	r24, r24
 80e:	91 50       	subi	r25, 0x01	; 1
 810:	50 40       	sbci	r21, 0x00	; 0
 812:	a9 f7       	brne	.-22     	; 0x7fe <__mulsf3_pse+0x64>
 814:	9e 3f       	cpi	r25, 0xFE	; 254
 816:	51 05       	cpc	r21, r1
 818:	70 f0       	brcs	.+28     	; 0x836 <__mulsf3_pse+0x9c>
 81a:	5c cf       	rjmp	.-328    	; 0x6d4 <__fp_inf>
 81c:	a6 cf       	rjmp	.-180    	; 0x76a <__fp_szero>
 81e:	5f 3f       	cpi	r21, 0xFF	; 255
 820:	ec f3       	brlt	.-6      	; 0x81c <__mulsf3_pse+0x82>
 822:	98 3e       	cpi	r25, 0xE8	; 232
 824:	dc f3       	brlt	.-10     	; 0x81c <__mulsf3_pse+0x82>
 826:	86 95       	lsr	r24
 828:	77 95       	ror	r23
 82a:	67 95       	ror	r22
 82c:	b7 95       	ror	r27
 82e:	f7 95       	ror	r31
 830:	e7 95       	ror	r30
 832:	9f 5f       	subi	r25, 0xFF	; 255
 834:	c1 f7       	brne	.-16     	; 0x826 <__mulsf3_pse+0x8c>
 836:	fe 2b       	or	r31, r30
 838:	88 0f       	add	r24, r24
 83a:	91 1d       	adc	r25, r1
 83c:	96 95       	lsr	r25
 83e:	87 95       	ror	r24
 840:	97 f9       	bld	r25, 7
 842:	08 95       	ret

00000844 <_exit>:
 844:	f8 94       	cli

00000846 <__stop_program>:
 846:	ff cf       	rjmp	.-2      	; 0x846 <__stop_program>
